{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","gatsby_plugin_transition_link_AniLink__WEBPACK_IMPORTED_MODULE_3__","gatsby_plugin_transition_link_AniLink__WEBPACK_IMPORTED_MODULE_3___default","NotFoundPage","a","createElement","className","title","to","cover","bg","activeStyle","fontWeight","textDecoration","SEO","_ref","description","lang","meta","keywords","siteUrl","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","render","data","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","name","content","property","ogImage","childImageSharp","fluid","src","author","concat","length","join","_public_static_d_3465605373_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,KAAAS,EAAAT,EAAAK,EAAAG,GAAAR,EAAA,KAkCeU,UA3BM,kBACnBN,EAAAO,EAAAC,cAACN,EAAA,EAAD,KACEF,EAAAO,EAAAC,cAAA,OAAKC,UAAU,kBACbT,EAAAO,EAAAC,cAACL,EAAA,EAAD,CAAKO,MAAM,mBACXV,EAAAO,EAAAC,cAAA,MAAIC,UAAU,yBAAd,OACAT,EAAAO,EAAAC,cAAA,KAAGC,UAAU,+BAAb,gEAGAT,EAAAO,EAAAC,cAAA,WACAR,EAAAO,EAAAC,cAAA,WACAR,EAAAO,EAAAC,cAAA,OAAKC,UAAU,wBACbT,EAAAO,EAAAC,cAACH,EAAAE,EAAD,CACEI,GAAG,IACHC,OAAK,EACLC,GAAG,UACHC,YAAa,CACXC,WAAY,OACZC,eAAgB,cANpB,4HCbR,SAASC,EAATC,GAAoE,IAArDC,EAAqDD,EAArDC,YAAaC,EAAwCF,EAAxCE,KAAMC,EAAkCH,EAAlCG,KAAMC,EAA4BJ,EAA5BI,SAAUZ,EAAkBQ,EAAlBR,MAAkBQ,EAAXK,QACvD,OACEC,EAAAjB,EAAAC,cAACiB,EAAA,YAAD,CACEC,MAAOC,EACPC,OAAQ,SAAAC,GACN,IAAMC,EACJX,GAAeU,EAAKE,KAAKC,aAAab,YACxC,OACEK,EAAAjB,EAAAC,cAACyB,EAAA1B,EAAD,CACE2B,eAAgB,CACdd,QAEFV,MAAOA,EACPW,KAAM,CACJ,CACEc,KAAI,cACJC,QAASN,GAEX,CACEO,SAAQ,SACRD,QAASP,EAAKE,KAAKC,aAAaT,SAElC,CACEc,SAAQ,WACRD,QAAS1B,GAEX,CACE2B,SAAQ,iBACRD,QAASN,GAEX,CACEO,SAAQ,UACRD,QAAO,WAET,CACEC,SAAQ,WACRD,QAASP,EAAKS,QAAQC,gBAAgBC,MAAMC,KAE9C,CACEN,KAAI,2BACJC,QAAO,wDAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASP,EAAKE,KAAKC,aAAaU,QAElC,CACEP,KAAI,gBACJC,QAAS1B,GAEX,CACEyB,KAAI,sBACJC,QAASN,GAEX,CACEK,KAAI,gBACJC,QAASP,EAAKS,QAAQC,gBAAgBC,MAAMC,KAE9C,CACEN,KAAI,eACJC,QAAS,iBAGVO,OACCrB,EAASsB,OAAS,EACd,CACET,KAAI,WACJC,QAASd,EAASuB,KAAT,OAEX,IAELF,OAAOtB,MAzElBQ,KAAAiB,IAiFJ7B,EAAI8B,aAAe,CACjB3B,KAAI,KACJC,KAAM,GACNC,SAAU,IAGZL,EAAI+B,UAAY,CACd7B,YAAa8B,IAAUC,OACvB9B,KAAM6B,IAAUC,OAChB7B,KAAM4B,IAAUE,MAChB7B,SAAU2B,IAAUG,QAAQH,IAAUC,QACtCxC,MAAOuC,IAAUC,OAAOG,YAGXpC,MAEf,IAAMU,EAAY","file":"component---src-pages-404-js-7349e420cc41310d24bf.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport AniLink from 'gatsby-plugin-transition-link/AniLink'\n\nimport './404.css'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <div className=\"four-zero-four\">\n      <SEO title=\"404: Not found\" />\n      <h1 className=\"four-zero-four__title\">404</h1>\n      <p className=\"four-zero-four__description\">\n        Вы зашли на страницу, которой не существует. Какая досада...\n      </p>\n      <br />\n      <br />\n      <div className=\"four-zero-four__link\">\n        <AniLink\n          to=\"/\"\n          cover\n          bg=\"#181818\"\n          activeStyle={{\n            fontWeight: 'bold',\n            textDecoration: 'underline',\n          }}\n        >\n          На главную\n        </AniLink>\n      </div>\n    </div>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title, siteUrl }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:url`,\n                content: data.site.siteMetadata.siteUrl,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                property: `og:image`,\n                content: data.ogImage.childImageSharp.fluid.src,\n              },\n              {\n                name: `google-site-verification`,\n                content: `content=\"bJ4SzHq0EYG9J8Oo99n-oVGv0k2Z3rRFLdLgCmVajME`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n              {\n                name: `twitter:image`,\n                content: data.ogImage.childImageSharp.fluid.src,\n              },\n              {\n                name: `twitter:site`,\n                content: 'angel8bar.ru',\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `ru`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n        siteUrl\n      }\n    }\n    ogImage: file(relativePath: { eq: \"ogImg.png\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1200) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}