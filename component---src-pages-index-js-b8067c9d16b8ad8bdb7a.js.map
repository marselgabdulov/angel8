{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./node_modules/tiny-invariant/dist/tiny-invariant.esm.js","webpack:///./node_modules/react-intersection-observer/react-intersection-observer.esm.js"],"names":["fluidImage","pageQuery","IndexPage","props","sections","useState","isFinal","currentSection","setCurrentSection","currentSectionIndex","setCurrentSectionIndex","useInView","triggerOnce","threshold","ref","inView","useEffect","el","document","getElementById","window","scroll","behavior","left","top","offsetTop","teamData","id","image","data","Arman","childImageSharp","fluid","name","position","projects","about","Konstantin","Sergey","Lado","title","className","classnames","handleClick","length","href","target","rel","introImage","intro_image","img","about_one","condition","message","Error","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_extends","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_assertThisInitialized","self","ReferenceError","INSTANCE_MAP","Map","OBSERVER_MAP","ROOT_IDS","consecutiveRootId","observe","element","callback","options","_options","root","rootMargin","has","observerId","get","set","toString","getRootId","observerInstance","IntersectionObserver","instance","observer","thresholds","Array","isArray","unobserve","itemsLeft","rootObserved","forEach","item","disconnect","changes","intersection","isIntersecting","intersectionRatio","some","undefined","_React$Component","subClass","superClass","InView","_this","_len","args","_key","concat","entry","node","setState","observeNode","state","onChange","create","constructor","__proto__","_proto","componentDidMount","componentDidUpdate","prevProps","prevState","componentWillUnmount","_this$props","handleChange","render","_this$state","children","isPlainChildren","handleNode","_this$props2","as","tag","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","initialState","_React$useState","setRef","current"],"mappings":"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","file":"component---src-pages-index-js-b8067c9d16b8ad8bdb7a.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useInView } from 'react-intersection-observer'\nimport { graphql } from 'gatsby'\nimport Footer from '../components/Footer/Footer'\n\nimport SEO from '../components/seo'\n// Components\nimport Layout from '../components/layout'\nimport ArrowToSection from '../components/ArrowToSection/ArrowToSection'\nimport IntroSection from '../components/IntroSection/IntroSection'\nimport AboutSection from '../components/AboutSection/AboutSection'\nimport TeamSection from '../components/TeamSection/TeamSection'\n\nimport InstagramLogo from '../assets/instagram-logo.svg'\nimport FacebookLogo from '../assets/facebookAlt.svg'\n\nimport { window } from 'browser-monads'\n\n//  Styles\nimport './index.scss'\nimport classnames from 'classnames'\n\nfunction IndexPage(props) {\n  const sections = ['intro', 'about', 'team']\n  const [currentSection, setCurrentSection] = useState({ isFinal: false })\n  const [currentSectionIndex, setCurrentSectionIndex] = useState(0)\n  const [ref, inView] = useInView({ triggerOnce: false, threshold: 0.5 })\n\n  useEffect(() => {\n    if (inView) {\n      setCurrentSection({ isFinal: true })\n    } else {\n      setCurrentSection({ isFinal: false })\n    }\n  }, [inView])\n\n  useEffect(() => {\n    executeScroll(document.getElementById(sections[currentSectionIndex]))\n  }, [currentSectionIndex])\n\n  function executeScroll(el) {\n    window.scroll({\n      behavior: 'smooth',\n      left: 0,\n      top: el.offsetTop,\n    })\n  }\n\n  function handleTargetSection() {\n    if (currentSectionIndex !== sections.length - 1) {\n      setCurrentSectionIndex(currentSectionIndex + 1)\n    } else {\n      setCurrentSectionIndex(0)\n    }\n  }\n\n  const teamData = [\n    {\n      id: 1,\n      image: props.data.Arman.childImageSharp.fluid,\n      name: 'Арман Хачатрян',\n      position: 'шеф-повар',\n      projects: 'Рагу, Тайский слон, Моментс',\n      about: 'ученик Алексея Зимина и Ильи Шалева',\n    },\n    {\n      id: 2,\n      image: props.data.Konstantin.childImageSharp.fluid,\n      name: 'Константин Комаров',\n      position: 'шеф-бармен',\n      projects: 'Noor, Gipsy, Bar 30/7, Уголёк',\n    },\n    {\n      id: 3,\n      image: props.data.Sergey.childImageSharp.fluid,\n      name: 'Сергей Захаров',\n      position: 'шеф-сомелье',\n      projects: 'Bar 30/7, Gipsy, Noor, Уголёк, Северяне',\n    },\n    {\n      id: 4,\n      image: props.data.Lado.childImageSharp.fluid,\n      name: 'Ладо Прангишвили',\n      position: 'идейный вдохновитель',\n      projects:\n        'Bar 30/7, Simachev Bar,Dodo, Pizza Express и Zю кафе, Time out Bar, Северяне',\n    },\n  ]\n\n  return (\n    <>\n      <Layout>\n        <SEO title=\"Angel 8 | Эмоциональная кухня и бар в Туле. ✆ +7 4872 77 02 47\" />\n        <div id=\"index\">\n          <div\n            className={classnames('index__scroll-button', {\n              'index__scroll-button--changed': currentSection.isFinal,\n            })}\n          >\n            <ArrowToSection handleClick={() => handleTargetSection()} />\n          </div>\n          <div className=\"index__social\">\n            <a\n              href=\"https://www.instagram.com/angel_bar_grill/?hl=ru\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <InstagramLogo />\n            </a>\n            <a\n              href=\"https://www.facebook.com/Angel-8-2123834887946466/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <FacebookLogo />\n            </a>\n          </div>\n          <IntroSection\n            introImage={props.data.intro_image.childImageSharp.fluid}\n          />\n          <AboutSection img={props.data.about_one.childImageSharp.fluid} />\n          <div className=\"final-section\" ref={ref}>\n            <TeamSection teamData={teamData} />\n          </div>\n        </div>\n      </Layout>\n      <Footer />\n    </>\n  )\n}\n\nexport const fluidImage = graphql`\n  fragment fluidImage on File {\n    childImageSharp {\n      fluid(maxWidth: 1200) {\n        ...GatsbyImageSharpFluid\n      }\n    }\n  }\n`\n\nexport const pageQuery = graphql`\n  query {\n    intro_image: file(relativePath: { eq: \"intro/ES-90.jpg\" }) {\n      ...fluidImage\n    }\n    about_one: file(relativePath: { eq: \"about/ES-79.jpg\" }) {\n      ...fluidImage\n    }\n    Lado: file(relativePath: { eq: \"team/Lado.jpg\" }) {\n      ...fluidImage\n    }\n    Sergey: file(relativePath: { eq: \"team/Sergey.jpg\" }) {\n      ...fluidImage\n    }\n    Konstantin: file(relativePath: { eq: \"team/Konstantin.jpg\" }) {\n      ...fluidImage\n    }\n    Arman: file(relativePath: { eq: \"team/Arman.jpg\" }) {\n      ...fluidImage\n    }\n  }\n`\n\nexport default IndexPage\n","var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\n\nfunction invariant(condition, message) {\n  if (condition) {\n    return;\n  }\n\n  if (isProduction) {\n    throw new Error(prefix);\n  }\n\n  throw new Error(prefix + \": \" + (message || ''));\n}\n\nexport default invariant;","import \"core-js/modules/es6.array.some\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.is-array\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.map\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.object.create\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.object.define-property\";\nimport { createElement, Component, useRef, useState, useCallback, useEffect } from 'react';\nimport invariant from 'tiny-invariant';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar INSTANCE_MAP = new Map();\nvar OBSERVER_MAP = new Map();\nvar ROOT_IDS = new Map();\nvar consecutiveRootId = 0;\n/**\n * Generate a unique ID for the root element\n * @param root\n */\n\nfunction getRootId(root) {\n  if (!root) return '';\n  if (ROOT_IDS.has(root)) return ROOT_IDS.get(root);\n  consecutiveRootId += 1;\n  ROOT_IDS.set(root, consecutiveRootId.toString());\n  return ROOT_IDS.get(root) + '_';\n}\n/**\n * Monitor element, and trigger callback when element becomes inView\n * @param element {HTMLElement}\n * @param callback {Function} Called with inView\n * @param options {Object} InterSection observer options\n * @param options.threshold {Number} Number between 0 and 1, indicating how much of the element should be inView before triggering\n * @param options.root {HTMLElement}\n * @param options.rootMargin {String} The CSS margin to apply to the root element.\n */\n\n\nfunction observe(element, callback, options) {\n  if (options === void 0) {\n    options = {};\n  } // IntersectionObserver needs a threshold to trigger, so set it to 0 if it's not defined.\n  // Modify the options object, since it's used in the onChange handler.\n\n\n  if (!options.threshold) options.threshold = 0;\n  var _options = options,\n      root = _options.root,\n      rootMargin = _options.rootMargin,\n      threshold = _options.threshold; // Validate that the element is not being used in another <Observer />\n\n  !!INSTANCE_MAP.has(element) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"react-intersection-observer: Trying to observe %s, but it's already being observed by another instance.\\nMake sure the `ref` is only used by a single <Observer /> instance.\\n\\n%s\") : invariant(false) : void 0;\n  /* istanbul ignore if */\n\n  if (!element) return; // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  // An observer with the same options can be reused, so lets use this fact\n\n  var observerId = getRootId(root) + (rootMargin ? threshold.toString() + \"_\" + rootMargin : threshold.toString());\n  var observerInstance = OBSERVER_MAP.get(observerId);\n\n  if (!observerInstance) {\n    observerInstance = new IntersectionObserver(onChange, options);\n    /* istanbul ignore else  */\n\n    if (observerId) OBSERVER_MAP.set(observerId, observerInstance);\n  }\n\n  var instance = {\n    callback: callback,\n    element: element,\n    inView: false,\n    observerId: observerId,\n    observer: observerInstance,\n    // Make sure we have the thresholds value. It's undefined on a browser like Chrome 51.\n    thresholds: observerInstance.thresholds || (Array.isArray(threshold) ? threshold : [threshold])\n  };\n  INSTANCE_MAP.set(element, instance);\n  observerInstance.observe(element);\n  return instance;\n}\n/**\n * Stop observing an element. If an element is removed from the DOM or otherwise destroyed,\n * make sure to call this method.\n * @param element {Element}\n */\n\n\nfunction unobserve(element) {\n  if (!element) return;\n  var instance = INSTANCE_MAP.get(element);\n\n  if (instance) {\n    var observerId = instance.observerId,\n        observer = instance.observer;\n    var root = observer.root;\n    observer.unobserve(element); // Check if we are still observing any elements with the same threshold.\n\n    var itemsLeft = false; // Check if we still have observers configured with the same root.\n\n    var rootObserved = false;\n    /* istanbul ignore else  */\n\n    if (observerId) {\n      INSTANCE_MAP.forEach(function (item, key) {\n        if (key !== element) {\n          if (item.observerId === observerId) {\n            itemsLeft = true;\n            rootObserved = true;\n          }\n\n          if (item.observer.root === root) {\n            rootObserved = true;\n          }\n        }\n      });\n    }\n\n    if (!rootObserved && root) ROOT_IDS[\"delete\"](root);\n\n    if (observer && !itemsLeft) {\n      // No more elements to observe for threshold, disconnect observer\n      observer.disconnect();\n    } // Remove reference to element\n\n\n    INSTANCE_MAP[\"delete\"](element);\n  }\n}\n\nfunction onChange(changes) {\n  changes.forEach(function (intersection) {\n    var isIntersecting = intersection.isIntersecting,\n        intersectionRatio = intersection.intersectionRatio,\n        target = intersection.target;\n    var instance = INSTANCE_MAP.get(target); // Firefox can report a negative intersectionRatio when scrolling.\n\n    /* istanbul ignore else */\n\n    if (instance && intersectionRatio >= 0) {\n      // If threshold is an array, check if any of them intersects. This just triggers the onChange event multiple times.\n      var inView = instance.thresholds.some(function (threshold) {\n        return instance.inView ? intersectionRatio > threshold : intersectionRatio >= threshold;\n      });\n\n      if (isIntersecting !== undefined) {\n        // If isIntersecting is defined, ensure that the element is actually intersecting.\n        // Otherwise it reports a threshold of 0\n        inView = inView && isIntersecting;\n      }\n\n      instance.inView = inView;\n      instance.callback(inView, intersection);\n    }\n  });\n}\n\nfunction isPlainChildren(props) {\n  return typeof props.children !== 'function';\n}\n/**\n * Monitors scroll, and triggers the children function with updated props\n *\n <InView>\n {({inView, ref}) => (\n   <h1 ref={ref}>{`${inView}`}</h1>\n )}\n </InView>\n */\n\n\nvar InView = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(InView, _React$Component);\n\n  function InView() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      inView: false,\n      entry: undefined\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"node\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleNode\", function (node) {\n      if (_this.node) {\n        unobserve(_this.node);\n\n        if (!node && !_this.props.triggerOnce) {\n          _this.setState({\n            inView: false,\n            entry: undefined\n          });\n        }\n      }\n\n      _this.node = node ? node : null;\n\n      _this.observeNode();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (inView, entry) {\n      // Only trigger a state update if inView has changed.\n      // This prevents an unnecessary extra state update during mount, when the element stats outside the viewport\n      if (inView !== _this.state.inView || inView) {\n        _this.setState({\n          inView: inView,\n          entry: entry\n        });\n      }\n\n      if (_this.props.onChange) {\n        // If the user is actively listening for onChange, always trigger it\n        _this.props.onChange(inView, entry);\n      }\n    });\n\n    return _this;\n  }\n\n  var _proto = InView.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    !this.node ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"react-intersection-observer: No DOM node found. Make sure you forward \\\"ref\\\" to the root DOM element you want to observe.\") : invariant(false) : void 0;\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold) {\n      unobserve(this.node);\n      this.observeNode();\n    }\n\n    if (prevState.inView !== this.state.inView) {\n      if (this.state.inView && this.props.triggerOnce) {\n        unobserve(this.node);\n        this.node = null;\n      }\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.node) {\n      unobserve(this.node);\n      this.node = null;\n    }\n  };\n\n  _proto.observeNode = function observeNode() {\n    if (!this.node) return;\n    var _this$props = this.props,\n        threshold = _this$props.threshold,\n        root = _this$props.root,\n        rootMargin = _this$props.rootMargin;\n    observe(this.node, this.handleChange, {\n      threshold: threshold,\n      root: root,\n      rootMargin: rootMargin\n    });\n  };\n\n  _proto.render = function render() {\n    var _this$state = this.state,\n        inView = _this$state.inView,\n        entry = _this$state.entry;\n\n    if (!isPlainChildren(this.props)) {\n      return this.props.children({\n        inView: inView,\n        entry: entry,\n        ref: this.handleNode\n      });\n    }\n\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        as = _this$props2.as,\n        tag = _this$props2.tag,\n        triggerOnce = _this$props2.triggerOnce,\n        threshold = _this$props2.threshold,\n        root = _this$props2.root,\n        rootMargin = _this$props2.rootMargin,\n        onChange = _this$props2.onChange,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"children\", \"as\", \"tag\", \"triggerOnce\", \"threshold\", \"root\", \"rootMargin\", \"onChange\"]);\n\n    return createElement(as || tag || 'div', _extends({\n      ref: this.handleNode\n    }, props), children);\n  };\n\n  return InView;\n}(Component);\n\n_defineProperty(InView, \"displayName\", 'InView');\n\n_defineProperty(InView, \"defaultProps\", {\n  threshold: 0,\n  triggerOnce: false\n});\n/* eslint-disable react-hooks/exhaustive-deps */\n\n\nvar initialState = {\n  inView: false,\n  entry: undefined\n};\n\nfunction useInView(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var ref = useRef();\n\n  var _React$useState = useState(initialState),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var setRef = useCallback(function (node) {\n    if (ref.current) {\n      unobserve(ref.current);\n    }\n\n    if (node) {\n      observe(node, function (inView, intersection) {\n        setState({\n          inView: inView,\n          entry: intersection\n        });\n\n        if (inView && options.triggerOnce) {\n          // If it should only trigger once, unobserve the element after it's inView\n          unobserve(node);\n        }\n      }, options);\n    } // Store a reference to the node, so we can unobserve it later\n\n\n    ref.current = node;\n  }, [options.threshold, options.root, options.rootMargin, options.triggerOnce]);\n  useEffect(function () {\n    if (!ref.current && state !== initialState && !options.triggerOnce) {\n      // If we don't have a ref, then reset the state (unless the hook is set to only `triggerOnce`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState(initialState);\n    }\n  });\n  return [setRef, state.inView, state.entry];\n}\n\nexport default InView;\nexport { InView, useInView };"],"sourceRoot":""}